const express = require('express');
const bodyParser = require('body-parser');
const twilio = require('twilio');

// Configuración de Twilio
const accountSid = 'TU_ACCOUNT_SID'; // Reemplaza con tu Account SID
const authToken = 'TU_AUTH_TOKEN'; // Reemplaza con tu Auth Token
const twilioPhoneNumber = 'TU_NUMERO_TWILIO'; // Reemplaza con tu número de Twilio

const client = twilio(accountSid, authToken);

const app = express();
app.use(bodyParser.json());

// Almacenamiento temporal de códigos (puedes usar una base de datos en producción)
const verificationCodes = {};

// Ruta para enviar el SMS
app.post('/send-sms', async (req, res) => {
    const { phoneNumber } = req.body;

    // Genera un código aleatorio de 6 dígitos
    const code = Math.floor(100000 + Math.random() * 900000);

    try {
        // Envía el SMS con el código
        await client.messages.create({
            body: `Tu código de confirmación es: ${code}`,
            from: twilioPhoneNumber,
            to: phoneNumber
        });

        // Guarda el código en memoria
        verificationCodes[phoneNumber] = code;

        res.json({ success: true });
    } catch (error) {
        console.error('Error al enviar el SMS:', error);
        res.status(500).json({ success: false, message: 'Error al enviar el SMS' });
    }
});

// Ruta para verificar el código
app.post('/verify-code', (req, res) => {
    const { phoneNumber, code } = req.body;

    // Verifica si el código coincide
    if (verificationCodes[phoneNumber] == code) {
        delete verificationCodes[phoneNumber]; // Elimina el código después de verificar
        res.json({ success: true, message: 'Código verificado correctamente' });
    } else {
        res.status(400).json({ success: false, message: 'Código incorrecto' });
    }
});

// Inicia el servidor
const PORT = 3000;
app.listen(PORT, () => {
    console.log(`Servidor iniciado en http://localhost:${PORT}`);
});